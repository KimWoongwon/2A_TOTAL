조남혁

템플릿의 특수화는 완전 특수화, 부분 특수화 두가지가 있다.
중요한것은 특수화라는 것은 템플릿에 융통성을 주는 기법이라는 것이다.

항상 가장 기본이 되는 베이스 템플릿이 존재해야하고 거기에 조금 융통성을 줘서 덧붙혀진 템플릿을 
만드는것이 특수화이다. 
템플릿은 알고리즘은 같지만 안의 자료형의 자유로움을 위해 만들어졌다.
자료형마다 다른 기능을 덧붙혀주고 싶을때 특수화를 만들었다.

template <>
<>사이에 아무것도 없고 모든 T가 자료형으로 바뀌었을때 완전특수화 라고 한다.

조남혁씨는 클래스 전체에 완전특수화를 했고 이부분은 string형의 클래스를 하나 새로 선언한것과 같다.
모든 기능은 같지만 정렬기능의 차이점으로 인해 완전특수화를 했다면, 함수단위로 진행하는것이 바람직하다.
클래스 완전특수화를 했을경우 모든 기능을 바꿀수 있다. 또한 베이스 템플릿에 없는 함수도 새로 하나 만들수 있다.
하지만 그렇게 굳이 할필요 없이 그냥 새로 하나 만드는것도 방법이다.

** 완전특수화는 주로 함수단위로 진행한다 **

완전특수화의 경우 T에 이 자료형으로 콕 찝어서 만드는것이다.
반면 부분특수화는 자료형을 종류별로 사용할때 사용한다. 
예를 들어 베이스 템플릿이 자료형T(int, char, float)등이라면 포인터형이 있기때문에 
부분특수화 템플릿은 포인터 자료형이라면 이런 틀로 만들자 하고 정하는것이다.
부분특수화는 주로 포인터에 의해 사용된다.

솔직히 나는 클래스템플릿의 특수화에 관한 부분을 완전히 이해하지는 못했었다.
특정상황에서 사용할수 있는 함수의 완전특수화에 관해서만 예제를 만들었다.

