1번째 발표자 : 성원식

MainManager 에서 모든 매니저를 싱글톤으로 만들었는데 
포인터 변수를 가지고 있을 이유가 없다. 그후 이니셜라이즈에서 생성해서
각 매니저의 인스턴스를 메인매니저에서 가지고있게끔 해주었다.
싱글톤 객체들은 GetInstance으로 어디서든 가져다 쓸수있기때문에 메인매니저에서는 
각 객체의 인스턴스를 멤버변수로 두고 소유할필요가 없다.

Create는 Create안에서 연쇄적으로 진행되어야한다.

생성자는 멤버변수의 clear 소멸자에서는 멤버변수중 동적할당의 delete의 역활이 가장 
합당하다.
발표자의 경우 멤버변수로 각 매니저의 인스턴스를 가지고 있기때문에 소멸자에서
그것을 delete해주었지만 사실 인스턴스를 가지고 있지 않다면 소멸자에서 할일은 없다.

싱글톤 객체들간에 생성과 초기화 삭제등이 통일성있게 진행되어야 한다(?)

컨트롤 클래스의 경우 초기작업이 많고 마지막에 뒤처리하는 작업이 많다면 이니셜라이즈와 엔드 
함수를 이용해서 해주는 경우가 많다. 하지만 어트리뷰트 클래스의 경우, 데이터의 집합 같은 경우
에는 생성자와 소멸자에서 해주는 경우가 많다.

 

