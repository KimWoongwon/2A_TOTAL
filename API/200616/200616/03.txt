#include <Windows.h>
#include "resource.h"
LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
HINSTANCE g_hInst;
LPCTSTR lpszClass = TEXT("Basic");
HWND G_hWnd;
void DrawBitmap(HDC hdc, int x, int y, HBITMAP hbit);
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdParam, int nCmdShow)
{
    HWND hWnd;
    MSG Message;
    WNDCLASS WndClass;
    g_hInst = hInstance;
    WndClass.cbClsExtra = 0;
    WndClass.cbWndExtra = 0;
    WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
    WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
    WndClass.hIcon = LoadIcon(NULL, IDI_SHIELD);
    WndClass.hInstance = hInstance;
    WndClass.lpfnWndProc = WndProc;
    WndClass.lpszClassName = lpszClass;
    WndClass.lpszMenuName = NULL;
    WndClass.style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;
    RegisterClass(&WndClass);
    hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,
        NULL, (HMENU)NULL, hInstance, NULL);
    ShowWindow(hWnd, nCmdShow);
    while (GetMessage(&Message, NULL, 0, 0)) {
        TranslateMessage(&Message);
        DispatchMessage(&Message);
    }
    return (int)Message.wParam;
}
LRESULT CALLBACK WndProc(HWND hWnd, UINT iMessage, WPARAM
    wParam, LPARAM lParam)
{
    static HDC hdc, BACKDC;
    HBITMAP backBitmap;
    static POINT ptMouse;

    PAINTSTRUCT pt;
    static HBITMAP Bitmap1 = LoadBitmap(g_hInst, MAKEINTRESOURCE(IDB_BITMAP1)),
        Bitmap2 = LoadBitmap(g_hInst, MAKEINTRESOURCE(IDB_BITMAP2));
    switch (iMessage)
    {
    case WM_DESTROY:
        DeleteObject(Bitmap1);
        DeleteObject(Bitmap2);
        PostQuitMessage(0);

    case WM_MOUSEMOVE:
        ptMouse.x = LOWORD(lParam);
        ptMouse.y = HIWORD(lParam);
        InvalidateRect(hWnd, NULL, FALSE);  //test
        return 0;
    case WM_PAINT:
        hdc = BeginPaint(hWnd, &pt);

        RECT rect;
        GetClientRect(hWnd, &rect);//Ã¢Å©±â

        BACKDC = CreateCompatibleDC(hdc);
        backBitmap = CreateCompatibleBitmap(hdc, rect.right, rect.bottom);
        HBITMAP OldBackBitmap = (HBITMAP)SelectObject(BACKDC, backBitmap);

        DrawBitmap(BACKDC, 200, 200, Bitmap1);
        DrawBitmap(BACKDC, ptMouse.x, ptMouse.y, Bitmap2);

        BitBlt(hdc, 0, 0, rect.right, rect.bottom, BACKDC, 0, 0, SRCCOPY);

        SelectObject(BACKDC, OldBackBitmap);
        DeleteDC(BACKDC);
        DeleteObject(backBitmap);
        EndPaint(hWnd, &pt);
        return 0;
    }
    return (DefWindowProc(hWnd, iMessage, wParam, lParam));
}
void DrawBitmap(HDC hdc, int x, int y, HBITMAP hbit)
{
    HDC MemoryDC;
    int BitmapX, BitmapY;
    BITMAP Bitmap_;
    HBITMAP OldBitmap;
    MemoryDC = CreateCompatibleDC(hdc);
    OldBitmap = (HBITMAP)SelectObject(MemoryDC, hbit);
    GetObject(hbit, sizeof(BITMAP), &Bitmap_);
    BitmapX = Bitmap_.bmWidth;
    BitmapY = Bitmap_.bmHeight;
    BitBlt(hdc, x, y, BitmapX, BitmapY, MemoryDC, 0, 0, SRCCOPY);
    SelectObject(MemoryDC, OldBitmap);
    DeleteDC(MemoryDC);
}